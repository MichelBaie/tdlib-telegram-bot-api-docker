name: Build and Push 'latest' Docker Image (AMD64)

on:
  # Permet de lancer ce workflow manuellement depuis l'onglet Actions
  workflow_dispatch:

  # Déclenche le workflow à chaque push sur la branche main
  push:
    branches:
      - 'main'
  
  # Exécute le build toutes les semaines pour intégrer les mises à jour de la base
  schedule:
    - cron: "0 2 */7 * *"

# Variables d'environnement pour la clarté
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # ex: MichelBaie/tdlib-telegram-bot-api-docker

jobs:
  build-and-push-latest:
    name: Build and Push 'latest'
    runs-on: ubuntu-latest
    
    # Permissions pour que le workflow puisse écrire sur le GitHub Container Registry
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # On spécifie ici un tag unique et statique : 'latest'
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64
          # Le cache est conservé pour accélérer les builds futurs
          cache-from: type=gha
          cache-to: type=gha,mode=max
