name: Build and Push Multi-Arch Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  schedule:
    - cron: "0 2 */7 * *"

env:
  REGISTRY: ghcr.io
  # On garde le nom de l'image avec sa casse d'origine ici
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-per-arch:
    name: Build on ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            runner: ubuntu-24.04
          - arch: arm64
            platform: linux/arm64
            runner: ubuntu-24.04-arm64

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # NOUVELLE ÉTAPE : Génère les tags et labels en minuscules
      - name: Generate Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Spécifie le nom de l'image. L'action se chargera de le mettre en minuscules.
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # On crée un tag qui se termine par '-<architecture>'
          # ex: 'latest-amd64'
          flavor: |
            suffix=-${{ matrix.arch }}
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          # On utilise les tags générés par l'étape 'meta', qui sont garantis en minuscules
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-manifest:
    name: Publish 'latest' manifest
    needs: build-per-arch
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ÉTAPE MODIFIÉE : Crée le manifest en utilisant un nom d'image en minuscules
      - name: Create and push 'latest' manifest
        run: |
          # On convertit le nom de l'image en minuscules avant de l'utiliser
          LOWERCASE_IMAGE_NAME=$(echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          
          echo "Creating manifest for ${LOWERCASE_IMAGE_NAME}:latest..."

          docker manifest create ${LOWERCASE_IMAGE_NAME}:latest \
            --amend ${LOWERCASE_IMAGE_NAME}:latest-amd64 \
            --amend ${LOWERCASE_IMAGE_NAME}:latest-arm64
            
          docker manifest push ${LOWERCASE_IMAGE_NAME}:latest
